# Prometheus KubeStack Configuration
# Compatible with Kubernetes 1.24+

# Global settings
fullnameOverride: "prometheus"

# Prometheus Operator
prometheusOperator:
  enabled: true
  logLevel: info
  # Use compatible API versions for K8s 1.24
  admissionWebhooks:
    enabled: true
    patch:
      enabled: true
      image:
        registry: registry.k8s.io
        repository: ingress-nginx/kube-webhook-certgen
        tag: v1.3.0

# Prometheus Server
prometheus:
  enabled: true
  
  prometheusSpec:
    # Storage configuration
    retention: 15d
    retentionSize: "50GB"
    
    # Resource limits
    resources:
      requests:
        cpu: 500m
        memory: 2Gi
      limits:
        cpu: 2000m
        memory: 4Gi
    
    # Storage class - adjust if needed
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
    
    # Service Monitor Selector - important for scraping
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorNamespaceSelector: {}
    
    # Pod Monitor Selector
    podMonitorSelectorNilUsesHelmValues: false
    podMonitorSelector: {}
    podMonitorNamespaceSelector: {}
    
    # Scrape interval
    scrapeInterval: 30s
    evaluationInterval: 30s
    
    # Enable admin API for management
    enableAdminAPI: false
    
    # Additional scrape configs
    additionalScrapeConfigs: []

  # Service configuration
  service:
    type: ClusterIP
    port: 9090

  # Ingress disabled - we'll use Istio VirtualService
  ingress:
    enabled: false

# Alertmanager
alertmanager:
  enabled: true
  
  alertmanagerSpec:
    retention: 120h
    storage:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
    
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi

  service:
    type: ClusterIP
    port: 9093

  ingress:
    enabled: false

# Grafana - will be installed separately
grafana:
  enabled: false

# Node Exporter - collects node metrics
nodeExporter:
  enabled: true

# Kube State Metrics - collects K8s object metrics
kubeStateMetrics:
  enabled: true

# Prometheus Node Exporter
prometheus-node-exporter:
  hostRootFsMount:
    enabled: true
  tolerations:
    - effect: NoSchedule
      operator: Exists

# Default rules
defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    configReloaders: true
    general: true
    k8s: true
    kubeApiserverAvailability: true
    kubeApiserverSlos: true
    kubelet: true
    kubeProxy: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeScheduler: true
    kubeStateMetrics: true
    network: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true

# Kubernetes component monitoring
kubeApiServer:
  enabled: true

kubelet:
  enabled: true
  namespace: kube-system

kubeControllerManager:
  enabled: true
  endpoints:
    - 172.17.98.221
    - 172.17.98.222
    - 172.17.98.223

kubeScheduler:
  enabled: true
  endpoints:
    - 172.17.98.221
    - 172.17.98.222
    - 172.17.98.223

kubeProxy:
  enabled: true

kubeEtcd:
  enabled: true
  endpoints:
    - 172.17.98.221
    - 172.17.98.222
    - 172.17.98.223
